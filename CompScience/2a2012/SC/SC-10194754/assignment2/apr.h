#ifndef MYAPR_H
#define MYAPR_H 

/* Structure parm describes the initial string configuration and the
 * simulation/computation parameters.  This structure is filled by
 * the libapr function parseargs or getparms and should not by changed
 * in any way.
 */
extern struct parm {
    enum { NONE=0, SINE=1, PLUCKED=2 } method; /* NONE is an illegal value  */
    int periods;     /* number of sine waves on string in case of SINE      */
    double location; /* global location (0.0 .. 1.0) of plucked position    */
    double stime;    /* time in seconds to simulate                         */
    double delta;    /* time to advance per string computation/iteration    */
    int ntotal;      /* number of points on string in total (global string) */
    int freq;        /* visualize every <freq> iterations, <=0 if none      */
} parms;

//Visualization functions

/* Initialization of the visualization procedure. 
 * This will open a file for the visualization for the calling process.
 */
extern FILE *visualize_init();

/*
 * Visualize the values of an iteration (write them to the file of the process)
 */
extern void  visualize (FILE *fp, int  nvalues, double *values, float time);

/* Combine all the files generated by the different processes 
   WARN: this *must* be called by all the processes simultaneously! */
extern void  visualize_combine();

//Parsing functions
extern int parseargs(int argc, char *argv[]); /* should be used by INF/AI */

//Get command line arguments; rank 0 reads them from stdin, and then broadcasts
// the values to all other processes. This function makes use of parseargs.
extern int getparms(int argc, char *argv[]);  /* only for BIS students    */

/* Fit a line ax+b to the given data points and return the residual sum (sum of
 squared errors) */
extern double fit_line(int ndata, double *x, double *y, double *a, double *b);

// NOTE: below is unused I think
#ifndef EXIT_FAILURE
# define EXIT_FAILURE 1
# define EXIT_SUCCESS 0
#endif

#ifndef M_PI
# define M_PI 3.14159265358979323846
#endif

#define	TRUE  1
#define FALSE 0

#endif
